name: Post-Release Workflow

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Get new version from package.json or Cargo.toml
      - name: Get new version
        id: get_version
        run: |
          NEW_VERSION=$(jq -r ".version" package.json)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Step 3: Create Git Tag
      - name: Create Git Tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a v${{ env.NEW_VERSION }} -m "Release v${{ env.NEW_VERSION }}"
          git push origin v${{ env.NEW_VERSION }}

      # Step 4: Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.NEW_VERSION }}
          name: "Release v${{ env.NEW_VERSION }}"
          body: |
            Automated release for version ${{ env.NEW_VERSION }}.
            Contains all changes from the release branch merged into main.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
